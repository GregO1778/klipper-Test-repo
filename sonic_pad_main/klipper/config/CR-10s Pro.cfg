# Disclaimer: use it at your own risk! 
# I don't know what motherboard is installed inside your printer, 
# the config is applicable for Creality CR10SPro printer only. 
# The printer looks like https://www.creality.com/products/creality-cr-10-smart-3d-printer 
# If you have one of CR10 Mini, CR10, CR10S Pro v2/3/4/5 CR10 Smartor , or CR10 Smart Pro printers please be aware: 
# it's totally different printers! And my config will be useless for you.
#
# P.S. The stock touchscreen is completely useless after flashing the Klipper firmware, 
# as it freezes when starting the printer. 
# Please keep any eye on these links for updates on utilizing the stock screen (although there appear to be no updates):
# https://github.com/Desuuuu/DGUS-reloaded-Klipper
# https://github.com/Desuuuu/klipper
# https://klipper.discourse.group/t/feature-request-extend-protocol-with-uart-commands/2414/3
#
#DEF [include mainsail.cfg]
#DEF [include fluidd.cfg]
#DEF [virtual_sdcard]
#DEF path: /home/pi/printer_data/gcodes
#DEF on_error_gcode: CANCEL_PRINT
#DEF 
#DEF [mcu]
#DEF serial: /dev/serial/by-id/<your-mcu-id>
#DEF 
#DEF [printer]
#DEF kinematics: none
#DEF max_velocity: 1000
#DEF max_accel: 1000
# Github repos and links:
# https://github.com/GregO1778/klipper
# https://github.com/Klipper3d/klipper (https://www.klipper3d.org/)
# https://github.com/th33xitus/kiauh
# https://github.com/Arksine/moonraker
# https://github.com/mainsail-crew/mainsail
# https://github.com/fluidd-core/fluidd
# https://github.com/jordanruthe/KlipperScreen
# https://github.com/OctoPrint/OctoPrint
# https://github.com/Kragrathea/pgcode
# https://github.com/TelegramBots/telegram.bot
# https://github.com/maxmr/OctoPrint-Klipper
# https://github.com/jacksonliam/mjpg-streamer
# https://github.com/pikvm/ustreamer
#
# https://github.com/bigtreetech/LIS2DW
# https://github.com/bigtreetech/ADXL345
# https://github.com/Mellow-3D/USB-Accelerometer | https://github.com/Mellow-3D/FLY-ADXL345-board?tab=readme-ov-file
# https://github.com/FYSETC/FYSETC-PortableInputShaper
# https://github.com/xbst/KUSBA
#
# https://github.com/rogerlz/rampon_anchor
#
# Klipper configuration to suit Creality CR-10S Pro (v1)
#
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# Raspberry PI setup:d as described here:
#
# https://www.raspberrypi.org/documentation/installation/installing-images/
# In the Raspberry pi Imager click Chose OS - Use Custom and select the just downloaded image. The rest of the install procedure is the same as on the raspberry page.
# 
# Setup WiFi if needed:
#
# https://www.raspberrypi.org/documentation/configuration/wireless/headless.md
# The default user and passowrd are pi and raspberry. We need to change the default password.
#
# Use MobaXterm (or equivalent) as it is an SSH client and remote file system in one to change the password and copy a few files onto the PI.
#
# For people not used to work with Raspberry PI's https://www.raspberrypi-spy.co.uk/2018/12/remote-access-pi-using-mobaxterm/ has a good description how to get into the PI.
#
# After starting up the PI FIRST run :
#
# sudo raspi-config
#           set a new passowrd (optiion 1, S3), optionally change the system name
#  sudo reboot
#
# Select the config file appropriate for your motherboard and copy it to /home/pi/klipper_config
# 
# Rename the file to klipper.cfg
#----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# !CR-10S Pro (v1)
# printer_size: 300x300x400
# version: 4.0
# This file contains pin mappings for the Creality CR-10S Pro (v1)
#
# Please ensure you PID autotune your heaters rather than just using these PID values!
# You will also need to substitute your own serial address after sending ls /dev/serial/by-id/* via SSH
#
# This file contains pin mappings for the Creality CR-10S Pro (v1)
#
# To use this config, during "make menuconfig" select the Atmega AVR and Processor model (atmega2560)
#
# DO NOT COPY THIS FILE WITHOUT CAREFULLY READING AND UPDATING IT
# FIRST. Incorrectly configured parameters may cause damage.
#
# See docs/Config_Reference.md for a description of parameters.
#
#### Now we can make the actual firmware to be flashed to the printer mainboard ####
# CD klipper
# sudo service klipper stop
# make menuconfig
#
# In the "make menuconfig" settings make sure you have the following (Default Baud rate is 250000, change to 115200):
#
#[*] Enable extra low-level configuration options
#    Micro-controller Architecture (Atmega AVR)  --->
#    Processor model (atmega2560)  --->
#    Processor speed (16Mhz)  --->
#    Communication interface (UART0)  --->
#(115200) Baud rate for serial port
#()  GPIO pins to set at micro-controller startup (NEW)
#
# run "make" to build the firmware
#
# The make command will build the actual firmware to be flashed to the printer and output the file /home/pi/klipper/out/klipper.elf.hex
#
# download klipper.elf.hex, rename it to firmware.elf.hex and write to an SD card
#
# NOTE: To find the dev serial device:
# ls /dev/serial/by-id/*
#
# the following is requiered in "printer.cfg" if you are not using this config:
#
# [mcu]
# serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
# baud: 115200
# restart_method: command
#
# For BIGTREETECH (S2DW V1.0 or ADXL345 V2.0), Fly ADXL345, FYSETC-PortableInputShaper, or KUSBA: Klipper USB Accelerometer Board
# NOTE: (two are required for sling bed printers (Bed slingers: CR-10 series, CR-6, Ender 3)
# https://www.amazon.com/BIGTREETECH-S2DW-Acceleration-Raspberry-Pi-Accelerometer/dp/B0CHFMBFCJ/ref=sr_1_5?crid=2F0GO0FDSZ8QP&dib=eyJ2IjoiMSJ9.Jl3vIynQ26YYe0PJ81tw3P0gknMQ5uHyMouce6pOg-309G-qjHbAvbhDOJCVbnySHZvZvq4JZOnzX6KeV9EkL-QGYGlVIH8R2T5SQioG3AhOWP062N-oiGutybWxSyQ4LXZlacjJCTQbm_BCtYkRjT5u0BOq5102KbgOnvPqimqRfOTaD0xt7Hx9uViwr_6IbkW1rS8o4l8iESFgJ20cfM8EBt25Psl6vyWLPjgMxqUO9WeaqpNKhNiznvxzdDYkGudTILE8ZCV4kHgXKKMmZTO-gvI4asaxDj2JnRMTEGU.ZHQDm9jSEX_J2I6Jnnb0qI225GF4W3d-FSOnvaIOyFA&dib_tag=se&keywords=BIGTREETECH+S2DW+V1.0&qid=1733609007&s=industrial&sprefix=bigtreetech+s2dw+v1.0%2Cindustrial%2C117&sr=1-5
# https://www.amazon.com/dp/B0CHJQ6CXF?ref=ppx_yo2ov_dt_b_fed_asin_title&th=1
# https://www.amazon.com/HOCENWAY-Accelerometer-Connection-Compatible-Raspberry/dp/B0DBVMQ92K/ref=sims_dp_d_dex_popular_subs_t1_v6_d_sccl_3_1/144-7975523-4306300?pd_rd_w=yVF3C&content-id=amzn1.sym.7e9f1c55-8db7-45c5-bfbf-adf1bc16de34&pf_rd_p=7e9f1c55-8db7-45c5-bfbf-adf1bc16de34&pf_rd_r=NY700CF1R9HSDM28BM73&pd_rd_wg=tuIjg&pd_rd_r=119ebf2c-ae95-4d94-af7f-eaa7c18d2773&pd_rd_i=B0DBVMQ92K&psc=1
# https://www.amazon.com/FYSETC-Portable-Upgraded-Klippe-r-Triden-t-Pack/dp/B0B8MMW2Z9/ref=sr_1_2?crid=2SPI27FYBKI9P&dib=eyJ2IjoiMSJ9._phICL4mUDPV9nESUARSPDkrrBVLLgf-QF65-awThrc.QsKOei1jOzid95_JCDguFM4BpBwAGPvX3LyJzqzJIqM&dib_tag=se&keywords=fysetc-portable+input+shaper&qid=1733608917&s=industrial&sprefix=fysetc-portableinputshaper%2Cindustrial%2C160&sr=1-2
# https://www.amazon.com/Isiks-Tech-KUSBA-Klipper-Accelerometer/dp/B0C734JL4Z?maas=maas_adg_AABAE123B3C6951B3F1F9BDBBF2BA8C6_afap_abs&ref_=aa_maas&tag=maas
#
# In the "make menuconfig" settings make sure you have the following:
#
# [ ] Enable extra low-level configuration options
#     Micro-controller Architecture (Raspberry Pi RP2040/RP235x)  --->
#     Processor model (rp2040)  --->
#     Bootloader offset (No bootloader)  --->
#     Communication Interface (USBSERIAL)  --->
#
# config
# Use PIS.cfg, and add it to your printer.cfg by
# [include PIS.cfg]
#
# how to flash rp2040 based USB Accelerometer Board
# Click and hold the button (this puts the device in Bootloader mode)
# Connect to to your PC with USB-C cable
# Folder popup, copy the klipper.uf2 to the folder
# NOTE: If using CMD, you will need to ls /dev/ to find the device then mount it (EX: mount /dev/sdc1 /mnt/pico1)
# --Alternate - After entering Bootloader mode, if already attached to Rpi run:
# sudo make flash FLASH_DEVICE=2e8a:0003
#
# Attention
# Make sure you flash PIS with the same Klipper version as your machine. I recommend you update Klipper to latest version.
#
# EEPROM IIC BL24CXX on I2C-0
# IIC_EEPROM_SDA                  PA11
# IIC_EEPROM_SCL                  PA12
# EEPROM SIZE              0x800  2K (24C16)
# BOARD_NO_NATIVE_USB
# PB4 (Z_STEP_PIN) from JTAG NRST role
# PB4 (Y_ENABLE_PIN) from JTAG NRST role
# SD_DETECT_PIN                       PC7
# SD_DETECT_PIN                       PC7
# SDCARD_CONNECTION                ONBOARD
# ON_BOARD_SPI_DEVICE                    1
# ONBOARD_SD_CS_PIN                   PC12  // SDSS
# SDIO_SUPPORT                              // Extra added by Creality
# NO_SD_HOST_DRIVE                          // This board's SD is only seen by the printer
# SDIO_CLOCK                       6000000  // In original source code overridden by Creality in sdio.h
# MOTOR_CIRCUIT_PIN                   PA1
# MOTOR_PROTECT_PIN                   PC0
#
######################################
############### Tuning ###############
######################################
#
#-Suggested layer height is 0.2 or 0.25 mm.
#-Infill and top layers can be set to 0.
#-Use 1-2 perimeters, or even better the smooth vase mode with 1-2 mm base.
#-Use sufficiently high speed, around 80-100 mm/sec, for external perimeters.
#-Make sure that the minimum layer time is at most 3 seconds.
#-Make sure any "dynamic acceleration control" is disabled in the slicer.
#-Do not turn the model. The model has X and Y marks at the back of the model. 
#Note the unusual location of the marks vs. the axes of the printer - it is not a mistake. 
#The marks can be used later in the tuning process as a reference, because they show which axis the measurements correspond to.
#
#Ringing frequency
#	SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
#	SET_PRESSURE_ADVANCE ADVANCE=0
#	SET_INPUT_SHAPER SHAPER_FREQ_X=0 SHAPER_FREQ_Y=0
#	TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5
#	V · N / D = (Hz) (Ex: 100 * 6 / 12.14 ≈ 49.4 Hz)
#
#	Y = 48.0769230    46.948356807
#	x = 35.0877192    37.037037037
#	max_accel = 3500
#
#Choosing input shaper
#	RESTART
#	SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
#	SET_PRESSURE_ADVANCE ADVANCE=0
#	SET_INPUT_SHAPER SHAPER_TYPE=EI
#	TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5
#
#Selecting max_accel
#	SET_PRESSURE_ADVANCE ADVANCE=0
#	TUNING_TOWER COMMAND=SET_VELOCITY_LIMIT PARAMETER=ACCEL START=1500 STEP_DELTA=500 STEP_HEIGHT=5
#
#
#Fine-tuning resonance frequencies
#	start = shaper_freq_x[37.04] * 83 / 132 = 23.29
#	factor = shaper_freq_x[37.04] / 66 = 0.56
#
#	SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
#	SET_PRESSURE_ADVANCE ADVANCE=0
#	SET_INPUT_SHAPER SHAPER_TYPE=EI
#	SET_VELOCITY_LIMIT ACCEL=4000
#	TUNING_TOWER COMMAND=SET_INPUT_SHAPER PARAMETER=SHAPER_FREQ_X START=23.29 FACTOR=0.56 BAND=5
#
#	SET_INPUT_SHAPER SHAPER_FREQ_X=37.04
#	shaper_freq_x value via old shaper_freq_x[37.04] * (39 + 5 * #band-number[6]) / 66 = 38.72
#
#	start = shaper_freq_y[46.95] * 83 / 132 = 29.52
#	factor = shaper_freq_y[46.95] / 66 = 0.71
#
#	SET_VELOCITY_LIMIT ACCEL_TO_DECEL=7000
#	SET_PRESSURE_ADVANCE ADVANCE=0
#	SET_INPUT_SHAPER SHAPER_TYPE=2HUMP_EI
#	SET_VELOCITY_LIMIT ACCEL=4000
#	TUNING_TOWER COMMAND=SET_INPUT_SHAPER PARAMETER=SHAPER_FREQ_Y START=29.52 FACTOR=0.71 BAND=5
#
#	SET_INPUT_SHAPER SHAPER_FREQ_Y=46.95
#	shaper_freq_y value via old shaper_freq_y[46.95] * (39 + 5 * #band-number[6]) / 66 = 49.08
#
#Measuring the resonances
#	ACCELEROMETER_QUERY CHIP=PISX
#	ACCELEROMETER_QUERY CHIP=PISY
#	MEASURE_AXES_NOISE
#	TEST_RESONANCES AXIS=X
#	TEST_RESONANCES AXIS=Y
#	~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
#	~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
#
#Tuning pressure advance
#	SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=1 ACCEL=500
#	TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.005
#		For long bowden extruders use:
#		TUNING_TOWER COMMAND=SET_PRESSURE_ADVANCE PARAMETER=ADVANCE START=0 FACTOR=.020
#	pressure_advance = <start> + <measured_height> * <factor>. (For example, 0 + 12.90 * .020 would be .258.)
#
# pi@raspberrypi:~ $ ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
# Fitted shaper 'zv' frequency = 95.2 Hz (vibrations = 39.5%, smoothing ~= 0.023)
# To avoid too much smoothing with 'zv', suggested max_accel <= 35300 mm/sec^2
# Fitted shaper 'mzv' frequency = 57.4 Hz (vibrations = 13.9%, smoothing ~= 0.062)
# To avoid too much smoothing with 'mzv', suggested max_accel <= 9700 mm/sec^2
# Fitted shaper 'ei' frequency = 81.0 Hz (vibrations = 17.0%, smoothing ~= 0.049)
# To avoid too much smoothing with 'ei', suggested max_accel <= 12200 mm/sec^2
# Fitted shaper '2hump_ei' frequency = 71.8 Hz (vibrations = 6.2%, smoothing ~= 0.105)
# To avoid too much smoothing with '2hump_ei', suggested max_accel <= 5700 mm/sec^2
# Fitted shaper '3hump_ei' frequency = 67.4 Hz (vibrations = 1.7%, smoothing ~= 0.180)
# To avoid too much smoothing with '3hump_ei', suggested max_accel <= 3300 mm/sec^2
# Recommended shaper is 3hump_ei @ 67.4 Hz
#
# pi@raspberrypi:~ $ ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png
# Fitted shaper 'zv' frequency = 29.6 Hz (vibrations = 14.6%, smoothing ~= 0.176)
# To avoid too much smoothing with 'zv', suggested max_accel <= 3200 mm/sec^2
# Fitted shaper 'mzv' frequency = 25.6 Hz (vibrations = 4.3%, smoothing ~= 0.311)
# To avoid too much smoothing with 'mzv', suggested max_accel <= 1900 mm/sec^2
# Fitted shaper 'ei' frequency = 29.0 Hz (vibrations = 1.2%, smoothing ~= 0.383)
# To avoid too much smoothing with 'ei', suggested max_accel <= 1500 mm/sec^2
# Fitted shaper '2hump_ei' frequency = 39.0 Hz (vibrations = 1.8%, smoothing ~= 0.355)
# To avoid too much smoothing with '2hump_ei', suggested max_accel <= 1500 mm/sec^2
# Fitted shaper '3hump_ei' frequency = 48.0 Hz (vibrations = 1.9%, smoothing ~= 0.356)
# To avoid too much smoothing with '3hump_ei', suggested max_accel <= 1500 mm/sec^2


# Recommended shaper is ei @ 29.0 Hz

############################
#   Cure Machine Settings
############################
#machine_start_gcode =
#;M201 X500.00 Y500.00 Z100.00 E5000.00 ;Setup machine max acceleration
#;M203 X500.00 Y500.00 Z10.00 E50.00 ;Setup machine max feedrate
#;M204 P500.00 R1000.00 T500.00 ;Setup Print/Retract/Travel acceleration
#;M205 X8.00 Y8.00 Z0.40 E5.00 ;Setup Jerk
#;M220 S100 ;Reset Feedrate
#;M221 S100 ;Reset Flowrate
#;
#;G28 ;Home
#;G29 ;Auto bed Level
#;
#;G92 E0 ;Reset Extruder
#;G1 Z2.0 F3000 ;Move Z Axis up
#;G1 X10.1 Y20 Z0.28 F5000.0 ;Move to start position
#;G1 X10.1 Y200.0 Z0.28 F1500.0 E15 ;Draw the first line
#;G1 X10.4 Y200.0 Z0.28 F5000.0 ;Move to side a little
#;G1 X10.4 Y20 Z0.28 F1500.0 E30 ;Draw the second line
#;G92 E0 ;Reset Extruder
#;G1 Z2.0 F3000 ;Move Z Axis up
#;
#;START_PRINT
#START_PRINT BED_TEMP={material_bed_temperature_layer_0} HOTEND_TEMP={material_print_temperature_layer_0}

#machine_end_gcode =
#;G91 ;Relative positioning
#;G1 E-2 F2700 ;Retract a bit
#;G1 E-2 Z0.2 F2400 ;Retract and raise Z
#;G1 X5 Y5 F3000 ;Wipe out
#;G1 Z10 ;Raise Z more
#;G90 ;Absolute positioning
#;
#;G1 X0 Y{machine_depth} ;Present print
#;M106 S0 ;Turn-off fan
#;M104 S0 ;Turn-off hotend
#;M140 S0 ;Turn-off bed
#;
#;M84 X Y E ;Disable all steppers but Z
#;
#END_PRINT

# This file contains pin mappings for the Creality CR-10S Pro. To use
# this config, the firmware should be compiled for the AVR atmega2560.

# See docs/Config_Reference.md for a description of parameters.

############################
#      Include Configs
############################
### CR-10S Pro (v1) ####
#[include CR10SPro.cfg]
### Mainsail config ###
#[include mainsail.cfg]
### Fluidd config ###
#[include fluidd.cfg]
#[include client.cfg]
### Inoput Shaper ###
#[include inputShaper.cfg]
### Macros ###
#[include client_macros.cfg]
#[include macros/*.cfg]
### Accelerometer Confi ###
#[include PIS.cfg]
### Variables ###
#[save_variables]
#filename: ~/variables.cfg
### Timelaps ###
#[include timelapse.cfg]
#[include moonraker_obico_macros.cfg]

############################
#            MCU
############################
# Please change the serial to the value of your installation
[mcu]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx
#serial: /dev/ttyPrinter
#serial: /dev/ttyUSB0
#serial: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_AK06VNAB-if00-port0   
#serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4.2:1.0-port0
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.2.2:1.0-port0
serial: /dev/serial/by-id/usb_serial_1
baud: 115200
#canbus_uuid:
#canbus_interface:
restart_method: command

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None
#spi_speed: 2000000
#spi_bus: spidev2.0

#[resonance_tester]
#accel_chip: adxl345
#accel_per_hz: 70
#probe_points:
#    150,150,20

############################
#    X-Accelerometer MCU
############################
##[mcu PISX]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx
#serial: /tmp/klipper_host_mcu
#serial: /dev/ttyACM1
#serial: usb-Arduino_RaspberryPi_Pico_C17861E628A63C27-if00
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66178C1273CA628-if00
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4.3.2:1.0
##serial: /dev/serial/by-id/usb-Klipper_rp2040_504434031039851C-if00
#baud: 115200
#canbus_uuid:
#canbus_interface:
##restart_method: command

############################
#    Y-Accelerometer MCU
############################
##[mcu PISY]
# Obtain definition by "ls -l /dev/serial/by-id/" then unplug to verify
#serial: /dev/serial/by-id/xxxx
#serial: /tmp/klipper_host_mcu
#serial: /dev/ttyACM0
#serial: usb-Arduino_RaspberryPi_Pico_C17861E629B07B27-if00
#serial: /dev/serial/by-id/usb-Klipper_rp2040_E66178C1277BB029-if00
#serial: /dev/serial/by-path/platform-fd500000.pcie-pci-0000:01:00.0-usb-0:1.4.3.1:1.0
##serial: /dev/serial/by-id/usb-Klipper_rp2040_50443403109C171C-if00 
#baud: 115200
#canbus_uuid:
#canbus_interface:
##restart_method: command

############################
#          Printer
############################
# Conservative default values that mimic the behaviour of the
# stock firmware for easy results. It can go faster.
[printer]
kinematics: cartesian
#max_velocity: 170
#max_velocity: 200
#max_velocity: 300
max_velocity: 500
#max_accel: 700
#max_accel: 1000
#max_accel: 1500
#max_accel: 2000
max_accel: 2500                         # based on Klipper ringing test print with MZV shaper
#max_accel: 2800
#max_accel: 3000
#max_accel: 3250 #4200max with input shaper, or 1500 without.
#max_accel: 3500
#max_accel: 4000
#max_accel: 4500
#max_accel: 5000
#max_accel: 5500
#max_accel: 6000
#max_accel: 6500
#max_accel: 7000
#max_accel_to_decel: 700
#max_accel_to_decel: 1000
#max_accel_to_decel: 1500
#max_accel_to_decel: 2000
#max_accel_to_decel: 2500
##max_accel_to_decel: 3000
#max_accel_to_decel: 3500
#max_accel_to_decel: 4000
#max_accel_to_decel: 4500
#max_accel_to_decel: 5000
#max_accel_to_decel: 5500
#max_accel_to_decel: 6000
#max_accel_to_decel: 6500
#max_accel_to_decel: 7000
###minimum_cruise_ratio: 0.5
square_corner_velocity: 5.0
#max_z_velocity: 5
#max_z_velocity: 10
max_z_velocity: 20                      # increased to allow faster non printing moves
##max_z_accel: 100
max_z_accel: 1000
#SET_VELOCITY_LIMIT MINIMUM_CRUISE_RATIO=0										 

############################
#        x steppers
############################
[stepper_x]
step_pin: PF0
dir_pin: PF1
enable_pin: !PD7
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
endstop_pin: ^PE5
#position_endstop: 0
position_endstop: -1.0                  # start the 300mm print surface at 5mm inset from 310mm X-sized bed edge
#position_endstop: -5
#position_min: 0
position_min: -1.0
#position_min: -5
#position_max: 300
#position_max: 305
position_max: 316                       # approximately 3mm margin to physical X-movement range of 320mm
#homing_speed: 50
homing_speed: 80
homing_retract_dist: 5
homing_retract_speed: 25                # reduced to prevent frame shock
second_homing_speed: 10                 # reduced to get better accuracy (not critical)
#homing_positive_dir:

############################
#        y steppers
############################
[stepper_y]
step_pin: PF6
dir_pin: !PF7
enable_pin: !PF2
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
endstop_pin: ^PJ1
#position_endstop: 0
position_endstop: -7.0                  # start the 300mm print surface at 10mm inset from 320mm Y-sized bed edge (requires correct Y-stop mechanical position adjustment)
#position_min: 0
position_min: -7.0
#position_max: 310
position_max: 306                       # approximately 2mm margin to physical Y-movement limit of 315mm (requires correct Y-stop mechanical position adjustment)
#homing_speed: 50
homing_speed: 80
homing_retract_dist: 5
homing_retract_speed: 25                # reduced to prevent frame shock
second_homing_speed: 10                 # reduced to get better accuracy (not critical)
#homing_positive_dir:

############################
#        z steppers 1
############################
[stepper_z]
#[stepper_z1]
step_pin: PL3
dir_pin: !PL1
enable_pin: !PK0
rotation_distance: 8
microsteps: 16
full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
endstop_pin: probe:z_virtual_endstop
position_min: -0.75                     # negative to allow for z_offset adjustment
#position_min: -1
#position_max: 351
position_max: 375                       # limit the Z build space to minimise bowden and wire harness rub against the top frame
homing_speed: 2.4                       # reduced for better capacitive probe accuracy
homing_retract_speed: 4
homing_retract_dist: 1.6                # this is conservative: we need less, just enough to overcome mechanical backlash and probe hysteresis
second_homing_speed: 0.2                # very slow approach speeds are a MUST, even with a high quality capacitive probe; more so with OEM probe
#homing_positive_dir:

############################
#        z steppers 2
############################
#[stepper_z2]
#step_pin: PL3
#dir_pin: !PL1
#enable_pin: !PK0
#rotation_distance: 8
#microsteps: 16
#full_steps_per_rotation: 200
#gear_ratio:
#step_pulse_duration:
#endstop_pin: probe:z_virtual_endstop
#position_min: -0.75                     # negative to allow for z_offset adjustment
#position_min: -1
#position_max: 351
#position_max: 375                       # limit the Z build space to minimise bowden and wire harness rub against the top frame
#homing_speed: 2.4                       # reduced for better capacitive probe accuracy
#homing_retract_speed: 4
#homing_retract_dist: 1.6                # this is conservative: we need less, just enough to overcome mechanical backlash and probe hysteresis
#second_homing_speed: 0.2                # very slow approach speeds are a MUST, even with a high quality capacitive probe; more so with OEM probe
#homing_positive_dir:

############################
#         extruder
############################
# Calibration.
# Measure 120mm, then extrude 100mm
# G1 E100 F100
# step_distance = old_e_steps * ((120 - distance_to_mark) / 100)
# Update step_distance below and FIRMWARE_RESTART
# pressure asdvance should be callibrated for your setup
[extruder]
step_pin: PA4
enable_pin: !PA2
dir_pin: PA6
microsteps: 16
rotation_distance: 22.900
#rotation_distance: 22.857               # this is factory configuration of 140 steps/mm that underextrudes (98 mm instead of 100 mm)

full_steps_per_rotation: 200
#gear_ratio:
nozzle_diameter: 0.400
filament_diameter: 1.750
#max_extrude_cross_section:
#instantaneous_corner_velocity: 1.000
#max_extrude_only_distance: 100.0
max_extrude_only_distance: 500.0
max_extrude_only_velocity: 70.0
max_extrude_only_accel: 1000.0
#SET_PRESSURE_ADVANCE ADVANCE=0							  
#pressure_advance = 0.141250
#pressure_advance_smooth_time: 0.061250
pressure_advance: 0.82

############################
#      extruder Heater
############################
heater_pin: PB4
#max_power: 1.0
sensor_type: EPCOS 100K B57560G104F    #default thermistor
#sensor_type: Honeywell 100K 135-104LAG-J01
sensor_pin: PK5
#pullup_resistor: 4700
#smooth_time: 1.0
control: pid
# Octoprint Tune Heater Name "extruder"
# Creality Spirit Hotend
#pid_Kp: 22.2
#pid_Kp = 28.213                         # stock Creality hot end with ReXT3D cooling duct @ 50% flow
pid_Kp = 31.748 
#pid_Ki: 1.08
#pid_Ki = 1.774                          # stock Creality hot end with ReXT3D cooling duct @ 50% flow
pid_Ki = 1.997 
#pid_Kd: 114
#pid_Kd = 112.148                        # stock Creality hot end with ReXT3D cooling duct @ 50% flow
pid_Kd = 126.200
# CR-10S Pro Microswiss Hotend
# Tuned for Microswiss hardware with 235 degree Celsius target
#pid_kp = 25.645
#pid_ki = 1.500
#pid_kd = 109.634
#pwm_cycle_time: 0.100
#min_extrude_temp: 170
min_temp: 0
#min_temp: 5
#max_temp: 265
#max_temp: 275
max_temp: 320

############################
#        Bed heaters
############################
[heater_bed]
heater_pin: PH5
sensor_type: EPCOS 100K B57560G104F    #default thermistor
sensor_pin: PK6
control: pid
# Octoprint Tune Heater Name "heater_bed"
# CR-10S Pro Stock Bed
# Stock hardware tunring with 50 degree Celsius target
#pid_Kp = 74.305                         # Creality borosilicate glass bed
pid_Kp = 77.133 
#pid_Kp: 690.34
#pid_Ki = 1.242                          # Creality borosilicate glass bed
pid_Ki = 1.530 
#pid_Ki: 111.47
pid_Kd = 971.882
#pid_Kd: 1068.83
#pid_Kd = 1111.784                       # Creality borosilicate glass bed
# CR-10S Pro Stock Bed
# Tuned for stock hardware with 100 degree Celsius target
#pid_kp = 76.424
#pid_ki = 1.150
#pid_kd = 1269.596
#pwm_cycle_time: 0.100
#min_extrude_temp: 170
min_temp: 0
#min_temp: 5
#max_temp: 120
#max_temp: 140
max_temp: 150

############################
#        Bed mesh
############################
# A 5x5 bed mesh must be choosen to have a point in the center of the bed
# that uses the middle mesh point, which is also the safe z home, for reference
# lagrange is the default algorithm
[bed_mesh]
#speed: 100
speed: 120
#speed: 150
horizontal_move_z: 2.6                  # reduced to speed things up, still conservative
#horizontal_move_z: 3
#horizontal_move_z: 5
#mesh_min: 5,5
#mesh_min: 10,10
mesh_min: 12, 12                        # this clears edges and clips with 300x300 bed & ReXT3D or factory part cooling duct
#mesh_min: 15,15
#mesh_min: 23.5,23.5
#mesh_max: 275,275
#mesh_max: 285,285
mesh_max: 288, 288                      # this clears edges and clips with 300x300 bed & ReXT3D or factory part cooling duct
#mesh_max: 290,290
#mesh_max: 295,295
probe_count: 5,5        #using 5x5 to give a center point on the bed
#probe_count: 6,6
fade_start: 1
fade_end: 10
fade_target: 0
split_delta_z: .025
move_check_distance: 5.0
mesh_pps: 2, 2
algorithm: bicubic
bicubic_tension: .2
#relative_reference_index:
#faulty_region_1_min:
#faulty_region_1_max:

############################
#        Bed tilt
############################
#[bed_tilt]
#x_adjust: 0
#y_adjust: 0
#z_adjust: 0
#points:
#speed: 50
#horizontal_move_z: 5

############################
#        Bed screws
############################
# This is only valid if the "Bed Screw" mod has been performed
[bed_screws]
screw1: 25,30                           # exact screw location based on the X&Y endstops defined above
screw1_name: front left screw
#screw1_fine_adjust:
screw2: 275,30                          # exact screw location based on the X&Y endstops defined above
screw2_name: front right screw
#screw2_fine_adjust:
screw3: 275,270                         # exact screw location based on the X&Y endstops defined above
screw3_name: rear right screw
#screw3_fine_adjust:
screw4: 25,270                          # exact screw location based on the X&Y endstops defined above
screw4_name: rear left screw
#screw4_fine_adjust:
horizontal_move_z: 5.0
horizontal_move_z: 10.0
# use the Creality supplied 0.2mm feeler gauge for manual adjustment to avoid bed damage
probe_height: 0.2
#speed: 50
speed: 80
#probe_speed: 2
probe_speed: 3.2                        # can approach faster than bed mesh probing for a coarse manual screw adjustment

############################
#        Screw tilt
############################
[screws_tilt_adjust]
screw1: 25, 30
screw1_name: front left screw
screw2: 275, 30
screw2_name: front right screw
screw3: 275, 270
screw3_name: rear right screw
screw4: 25, 270
screw4_name: rear left screw
horizontal_move_z: 10.
speed: 50.0
screw_thread: CW-M4

############################
#          Z tilt
############################
#[z_tilt]
#z_positions:
#points:
#speed: 50
#horizontal_move_z: 5
#retries: 0
#retry_tolerance: 0

############################
#         Quad Z
############################
#[quad_gantry_level]
#gantry_corners:
#points:
#speed: 50
#horizontal_move_z: 5
#max_adjust: 4
#retries: 0
#retry_tolerance: 0

############################
#          Skew
############################
#[skew_correction]

############################
#        z home
############################
[safe_z_home]
#home_xy_position: 150,150
#home_xy_position: 177,155
home_xy_position: 178,150               # this is for 300x300 print surface with 28mm probe to nozzle offset
#speed: 50
#speed: 80.0
#speed: 150.0
speed: 200
#z_hop: 3
#z_hop: 5
z_hop: 10
#z_hop_speed: 3
z_hop_speed: 5
#move_to_previous: False

############################
#      Override home
############################
#[homing_override]
#gcode:
#axes: xyz
#set_position_x:
#set_position_y:
#set_position_z:

############################
#   Endstop adjustment x
############################
#[endstop_phase stepper_x]
#endstop_accuracy:
#trigger_phase:
#endstop_align_zero: False

############################
#   Endstop adjustment y
############################
#[endstop_phase stepper_y]
#endstop_accuracy:
#trigger_phase:
#endstop_align_zero: False

############################
#   Endstop adjustment z
############################
#[endstop_phase stepper_z]
#endstop_accuracy:
#trigger_phase:
#endstop_align_zero: False

############################
#      idle timeout
############################
# set to 10 minutes so the Heat_Soak macro doesn't timeout
[idle_timeout]
#timeout: 600
timeout: 172800

############################
#      File directory
############################
###fluidd set
[virtual_sdcard]
path: ~/gcode_files
#path: /home/pi/printer_data/gcodes
#on_error_gcode:

############################
#      File looping
############################
#[sdcard_loop]

############################
#        Force Move
############################
# This allows for moving of the head or bed without disabeling steppers
[force_move]
enable_force_move: True

############################
#      pause / resume
############################
[pause_resume]
#recover_velocity: 50.0

############################
#        Retraction
############################
[firmware_retraction] # This enables G10 (retract) and G11 (unretract) GCODE commands issued by many slicers
#retract_length: 0
retract_length: 1.53
#   The length of filament (in mm) to retract when G10 is activated,
#   and to unretract when G11 is activated (but see
#   unretract_extra_length below). The default is 0 mm.
retract_speed: 20
#   The speed of retraction, in mm/s. The default is 20 mm/s.
unretract_extra_length: 0
#   The length (in mm) of *additional* filament to add when
#   unretracting.
unretract_speed: 10
#   The speed of unretraction, in mm/s. The default is 10 mm/s.

############################
#           Arc
############################
[gcode_arcs]                            # allow use of ArcWelder
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm
resolution: 0.5
#resolution: 1.0

############################
#         Responce
############################
[respond] # enables the M118 command which essentially enables you to echo things to the Klipper console
default_type: echo
#default_prefix: echo:

############################
#       Object cancel
############################
[exclude_object] # Enables support to exclude or cancel individual objects during the printing process

############################
#  Resonance compensation
############################
[input_shaper]
# frequency for the X mark of the test model
#shaper_freq_x = 72.6 #conducted with fan on 72.6 mzv
shaper_freq_x: 31.5                     # stock CR-10S Pro with very well assembled and tuned mechanicals
# frequency for the Y mark of the test model
#shaper_freq_y = 33.6#23.2
shaper_freq_y: 34.0                     # stock CR-10S Pro with very well assembled and tuned mechanicals
#InputShaper	ShaperDuration	VibrationReduction_20x_(5%_vibration_tolerance)		VibrationReduction_10x_(10%_vibration_tolerance)
#ZV	0.5 / shaper_freq	N/A	± 5% shaper_freq
#shaper_type: zv
#MZV	0.75 / shaper_freq	± 4% shaper_freq	-10%...+15% shaper_freq
#shaper_type: mzv
#ZVD	1 / shaper_freq	± 15% shaper_freq	± 22% shaper_freq
#shaper_type: zvd
#EI	1 / shaper_freq	± 20% shaper_freq	± 25% shaper_freq
#shaper_type: ei
#2HUMP_EI	1.5 / shaper_freq	± 35% shaper_freq	± 40 shaper_freq
#shaper_type: 2hump_ei
#3HUMP_EI	2 / shaper_freq	-45...+50% shaper_freq	-50%...+55% shaper_freq
#shaper_type: 3hump_ei
#shaper_type_x: zv
##shaper_type_x: mzv
#shaper_type_x: zvd
#shaper_type_x: ei
#shaper_type_x: 2hump_ei
#shaper_type_x: 3hump_ei
##shaper_type_y: zv
#shaper_type_y: mzv
#shaper_type_y: zvd
#shaper_type_y: ei
#shaper_type_y: 2hump_ei
#shaper_type_y: 3hump_ei
shaper_type: mzv
damping_ratio_x: 0.1
damping_ratio_y: 0.1

############################
#    X-Accelerometer chip
############################
##[adxl345 PISX]
#cs_pin: rpi:None
#cs_pin: PISX:gpio13
##cs_pin: PISX:gpio9
#spi_speed: 5000000
#spi_bus: spi1a
##spi_software_sclk_pin: PISX:gpio10
##spi_software_mosi_pin: PISX:gpio11
#spi_software_miso_pin: PISX:gpio12
##spi_software_miso_pin: PISX:gpio8
#axes_map: -z,y,x #FYSETC
##axes_map: -z,x,y #BigTreeTech
#rate: 3200

#[output_pin power_mode_X]
#pin: adxl:gpio23
#This will force the Pico's power source to go into high-performance mode rather than power saving mode.

#To avoid too much smoothing with 'ei', suggested max_accel <= 10500 mm/sec^2
#shaper_type_x:ei shaper_freq_x:75.000 damping_ratio_x:0.100000

############################
#    Y-Accelerometer chip
############################
##[adxl345 PISY]
#cs_pin: rpi:None
#cs_pin: PISY:gpio13
##cs_pin: PISY:gpio9
#spi_speed: 5000000
#spi_bus: spi1a
##spi_software_sclk_pin: PISY:gpio10
##spi_software_mosi_pin: PISY:gpio11
#spi_software_miso_pin: PISY:gpio12
##spi_software_miso_pin: PISY:gpio8
#axes_map: x,y,z #FYSETC
##axes_map: y,x,z #BigTreeTech
#rate: 3200

#[output_pin power_mode_Y]
#pin: adxl:gpio23
#This will force the Pico's power source to go into high-performance mode rather than power saving mode.

#To avoid too much smoothing with 'mzv', suggested max_accel <= 2800 mm/sec^2
#shaper_type_y:mzv shaper_freq_y:31.000 damping_ratio_y:0.100000

############################
#    Resonance tester
############################
##[resonance_tester]
##probe_points: 150,150,10
#probe_points: 150,150,20
##probe_points: 117.5,117.5,20  # bed center???
#accel_chip: adxl345
##accel_chip_x: adxl345 PISX
##accel_chip_y: adxl345 PISY
#max_smoothing:
#min_freq: 5
#max_freq: 133.33
#accel_per_hz: 75
#hz_per_sec: 1

############################
#    MCU / pin alias
############################
#[board_pins my_aliases]
#mcu: mcu
#aliases:
#aliases_<name>:

############################
#      Duplicate pins
############################
#[duplicate_pin_override]
#pins:

############################
#         ABL Prob
############################
# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.
[probe]
pin: PD3
#x_offset: -27
x_offset: -28                           # as measured on the printer, the offset is actually 28mm
y_offset: 0
#z_offset: 0                             # this needs to be adjusted for each printer to achieve correct first layer height
#z_offset: -0.15
z_offset: .130  #raise to bring closer lower to move away
speed: 0.2                              # very slow approach speeds are a MUST, even with a high quality capacitive probe; more so with OEM probe
#speed: 0.50
#speed: 1.0
speed: 2.0
#speed: 3.0
#speed: 4.0
##speed: 5.0
#samples: 2
#samples: 3
samples: 4                              # this is excessive, but it satisfies my OCD tendencies
#sample_retract_dist: 3.0
sample_retract_dist: 1.2                # this value is still conservative with a high quality capacitive probe
lift_speed: 4.0
#lift_speed: 5
samples_result: average
#samples_result: median
samples_tolerance: 0.05
samples_tolerance_retries: 2

############################
#   bl touch / cr touch
############################
# For CR-10s Pro or CR-10 Smart Pro
#[bltouch]
##sensor_pin: ^PD3      #signal check port ^stands for pull up
#sensor_pin:
##control_pin: PB5      #singal control prot
#control_pin:
#pin_move_time: 0.680
##stow_on_each_sample: false
##probe_with_touch_mode: true
#pin_up_reports_not_triggered: True
#pin_up_touch_mode_reports_triggered: True
#set_output_mode:
##x_offset: -27
##y_offset: -2
##z_offset: 0
# #x_offset: -31.8
# #y_offset: -40.5
# #z_offset: 1.50          #z off_set configuration
# speed: 3.0
##speed: 4.0
#speed:10
#lift_speed:
#samples:1
##samples: 2
##sample_retract_dist: 3.0
#samples_result:average
#samples_tolerance:
#samples_tolerance_retries:
# #probe_with_touch_mode = true

############################
#   Heater error checking
############################
#[verify_heater heater_config_name]
#max_error: 120
#check_gain_time:
#hysteresis: 5
#heating_gain: 2

############################
#       Disable heater
############################
#[homing_heaters]
#steppers:
#heaters:

############################
#       Temp sensor
############################
#[thermistor my_thermistor]
#temperature1:
#resistance1:
#temperature2:
#resistance2:
#temperature3:
#resistance3:
#beta:

############################
#     Board Temp sensor
############################
#[temperature_sensor Board_MCU]
#sensor_type: temperature_mcu
#min_temp: 0
#max_temp: 100

############################
#       Heater fan
############################
#[heater_fan hotend_fan]
#pin: 
#max_power: 1.0
#shutdown_speed: 0
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#heater: extruder
#heater_temp: 60.0
#fan_speed: 1.0

############################
#       Stepper fan
############################
#[controller_fan my_controller_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#fan_speed: 1.0
#idle_timeout:
#idle_speed:
#heater:
#stepper:

############################
#       Temp fan
############################
#[temperature_fan my_temp_fan]
#pin:
#max_power:
#shutdown_speed:
#cycle_time:
#hardware_pwm:
#kick_start_time:
#off_below:
#tachometer_pin:
#tachometer_ppr:
#tachometer_poll_interval:
#enable_pin:
#sensor_type:
#sensor_pin:
#control:
#max_delta:
#min_temp:
#max_temp:
#pid_Kp:
#pid_Ki:
#pid_Kd:
#pid_deriv_time: 2.0
#target_temp: 40.0
#max_speed: 1.0
#min_speed: 0.3
#gcode_id:

############################
#       MCU fan
############################
[fan]
pin: PH6
#max_power: 1.0
#shutdown_speed: 0
#cycle_time: 0.010
#hardware_pwm: False
#hardware_pwm: True
kick_start_time: 0.5
#kick_start_time: 1.0
#off_below: 0.0
#tachometer_pin:
#tachometer_ppr: 2
#tachometer_poll_interval: 0.0015
#enable_pin:

############################
#        LED lights
############################
#[output_pin LED_pin]
#pin: 
#pwm: False
#static_value:
#value: 0
#value: 1
#shutdown_value:
#maximum_mcu_duration:
#cycle_time: 0.100
#hardware_pwm: False
#scale:

############################
#        light bar
############################
#[output_pin lights]
#pin: PA7
#value: 1

############################
#      Power control
############################
# Turns off the printer
#[output_pin ps_on]
#pin: 
#value: 1
#shutdown_value: 1

############################
#       Factory Reset
############################
# Do not use PB12. PB12 resets the Wifi board.
# Halt and Catch Fire.
# This is connected to the Wifi Boards Reset Pin.
# If you enable that, the Wifi Board will go down and you cannot disable it.
# This will lead to the pin being hold and do a factory reset on the wifi board.
# If you are using the WiFi board for klipper,
# you will have to connect to the KlipperWrt Wifi and configure everything again.
#[output_pin factory_reset]
#pin: PB12
#value: 0

############################
#        Static pins
############################
#[static_digital_output daughterboard_communication]
#pins: 

############################
#        Multi pins
############################
#[multi_pin my_multi_pin]
#pins:

############################
#      Driver Config
############################
#[tmc2208 stepper_ ]
#[tmc2209 stepper_ ]
#uart_pin:
#tx_pin:
#select_pins:
#interpolate: True
#run_current:
#hold_current:
#sense_resistor: 0.110
#stealthchop_threshold: 0
#driver_IHOLDDELAY: 8
#driver_TPOWERDOWN: 20
#driver_TBL: 2
#driver_TOFF: 3
#driver_HEND: 0
#driver_HSTRT: 5
#driver_PWM_AUTOGRAD: True
#driver_PWM_AUTOSCALE: True
#driver_PWM_LIM: 12
#driver_PWM_REG: 8
#driver_PWM_FREQ: 1
#driver_PWM_GRAD: 14
#driver_PWM_OFS: 36

############################
#      Display
############################
#[display]
#lcd_type:
#display_group:
#menu_timeout:
#menu_root:
#menu_reverse_navigation:
#encoder_pins:#encoder_steps_per_detent:
#click_pin:
#back_pin:
#up_pin:
#down_pin:
#kill_pin:
#analog_pullup_resistor: 4700
#analog_range_click_pin:
#analog_range_back_pin:
#analog_range_up_pin:
#analog_range_down_pin:
#analog_range_kill_pin:
##[t5uid1]
#PA2: LCD Tx
#PA3: LCD Rx
#Settings used for the CR-10 Smart
##firmware: dgus_reloaded
##update_interval: 1
##machine_name: CR-10 Smart
##volume: 40
##brightness: 50
#x_min_inset: 26.0                       # 25mm inset from X=0
#x_max_inset: 41.0                       # 25mm inset from X=300
#y_min_inset: 37.0                       # 30mm inset from Y=0
#y_max_inset: 36.0                       # 30mm inset from Y=300
#z_min: 0                                # avoid accidental bed collisions
#z_max: 350                              # additional margin for LCD commanded moves

############################
#      Display status
############################
[display_status]

############################
#  Filament Runout sensor
############################
[filament_switch_sensor e0_sensor]
#switch_pin: PE4
#pause_on_runout: false
#runout_gcode:
#    PAUSE RETRACTION=True
#insert_gcode:
#    RESUME
#pause_on_runout: true
pause_on_runout: false
switch_pin: PE4
runout_gcode: PAUSE_PARK
#runout_gcode: PAUSE
insert_gcode: RESUME

#[t5uid1]
#firmware: dgus_reloaded
#update_interval: 1
#machine_name: CR-10S Pro
#volume: 40
#brightness: 50
#x_min_inset: 26.0                       # 25mm inset from X=0
#x_max_inset: 41.0                       # 25mm inset from X=300
#y_min_inset: 37.0                       # 30mm inset from Y=0
#y_max_inset: 36.0                       # 30mm inset from Y=300
#z_min: 0                                # avoid accidental bed collisions
#z_max: 350                              # additional margin for LCD commanded moves

# https://github.com/Desuuuu/klipper-macros
# If you want to use these macros, follow the instructions from the repository
# and uncomment the following lines.

#[save_variables]
#filename: ~/variables.cfg
#
#[delayed_gcode macros_initialize]
#initial_duration: 1
#gcode:
#  INITIALIZE_VARIABLE VARIABLE=park_x VALUE=20
#  INITIALIZE_VARIABLE VARIABLE=park_y VALUE=290
#  INITIALIZE_VARIABLE VARIABLE=bowden_len VALUE=400
#

[exclude_object]

############################
#         MACROS
############################

[gcode_macro FW_Retract_PLA]
gcode:
    SET_RETRACTION [RETRACT_LENGTH=1.52] [RETRACT_SPEED=20] [UNRETRACT_EXTRA_LENGTH=0] [UNRETRACT_SPEED=10]
[gcode_macro FW_Retract_PETG]
gcode:
    SET_RETRACTION [RETRACT_LENGTH=1.57] [RETRACT_SPEED=20] [UNRETRACT_EXTRA_LENGTH=0] [UNRETRACT_SPEED=10]

[gcode_macro CalibrateResonance]
gcode:
    BED_ALIGN
    SHAPER_CALIBRATE

[gcode_macro BED_LEVEL]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro G27]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G27_state
    G91
    G1 Z{z}
    G90
    G1 X{x} Y{y} F3000
    RESTORE_GCODE_STATE NAME=G27_state MOVE=0
  {% endif %}

[gcode_macro G29]
gcode:
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    G90
    G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G90
    G1 Z10 F240
    G1 X150 Y155 F6000
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

[gcode_macro CrealityG29]
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200
  # save_config

[gcode_macro BED_ALIGN]
gcode:
    {% if printer.toolhead.homed_axes != 'XYZ' %}
        G28
    {% endif %}
    #Z_TILT_ADJUST
    #G28 Z

[gcode_macro INITIALIZE_VARIABLE]
gcode:
  {% if 'VARIABLE' not in params %}
    {action_respond_info("Missing VARIABLE parameter")}
  {% elif 'VALUE' not in params %}
    {action_respond_info("Missing VALUE parameter")}
  {% else %}
    {% set svv = printer.save_variables.variables %}
    {% if params.VARIABLE not in svv %}
      {% set escaped = params.VALUE|replace("\"", "\\\"") %}
      SAVE_VARIABLE VARIABLE={params.VARIABLE} VALUE="{escaped}"
    {% endif %}
  {% endif %}

[gcode_macro LAZY_HOME]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    G28
  {% endif %}

[gcode_macro M204]
rename_existing: M204.1
gcode:
  {% set f = params.F|default(0.5)|float %}

  {% if 'S' in params %}
    {% set s = params.S|float %}
    SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={ s * f }
  {% else %}
    {% if 'P' in params %}
      {% set p = params.P|float %}
      {% if 'T' in params %}
        {% set t = params.T|float %}
        {% if p < t %}
          SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
        {% else %}
          SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
        {% endif %}
      {% else %}
        SET_VELOCITY_LIMIT ACCEL={p} ACCEL_TO_DECEL={ p * f }
      {% endif %}
    {% elif 'T' in params %}
      {% set t = params.T|float %}
      SET_VELOCITY_LIMIT ACCEL={t} ACCEL_TO_DECEL={ t * f }
    {% endif %}
  {% endif %}

[gcode_macro BOOTUP_CALIBRATE]
gcode:
    BED_ALIGN
    BED_LEVEL

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro M81]
gcode:
    set_pin pin=ps_on value=0
    set_pin pin=fan1 value=0

#[gcode_macro M600]
#gcode:
#  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
#  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}
#  {% set default_e = 100 %}
#
#  {% if 'save_variables' in printer %}
#    {% set svv = printer.save_variables.variables %}
#    {% if 'park_x' in svv %}
#      {% set default_x = svv.park_x %}
#    {% endif %}
#    {% if 'park_y' in svv %}
#      {% set default_y = svv.park_y %}
#    {% endif %}
#    {% if 'bowden_len' in svv %}
#      {% set default_e = svv.bowden_len %}
#    {% endif %}
#  {% endif %}
#
#  {% set x = params.X|default(default_x)|float %}
#  {% set y = params.Y|default(default_y)|float %}
#  {% set z = params.Z|default(20)|float %}
#  {% set e = params.E|default(default_e)|float %}
#
#  {% if printer.pause_resume.is_paused %}
#    {action_respond_info("Already paused")}
#  {% elif printer.toolhead.homed_axes != "xyz" %}
#    {action_respond_info("Please home XYZ first")}
#  {% else %}
#    PAUSE_PARK X={x} Y={y} Z={z}
#    M702 U{e}
#  {% endif %}
[gcode_macro M701]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}
  {% set p = params.P|default(30)|float %}
  {% set p_f = params.PF|default(180)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M701_state
    M83
    {% if i > 0.0 %}
      G1 E{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E{u} F{u_f}
    {% endif %}
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M701_state MOVE=0
  {% endif %}

[gcode_macro M702]
gcode:
  {% set default_u = 100 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'bowden_len' in svv %}
      {% set default_u = svv.bowden_len %}
    {% endif %}
  {% endif %}

  {% set p = params.P|default(8)|float %}
  {% set p_f = params.PF|default(180)|float %}
  {% set i = params.I|default(30)|float %}
  {% set i_f = params.IF|default(180)|float %}
  {% set u = params.U|default(default_u)|float %}
  {% set u_f = params.UF|default(360)|float %}

  {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=M702_state
    M83
    {% if p > 0.0 %}
      G1 E{p} F{p_f}
    {% endif %}
    {% if i > 0.0 %}
      G1 E-{i} F{i_f}
    {% endif %}
    {% if u > 0.0 %}
      G1 E-{u} F{u_f}
    {% endif %}
    RESTORE_GCODE_STATE NAME=M702_state MOVE=0
  {% endif %}

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

#[gcode_macro M204.2]
#rename_existing: M204.1
#gcode:
#	{% if params.S is defined %}
#		{% set s = params.S|float %}
#		SET_VELOCITY_LIMIT ACCEL={s} ACCEL_TO_DECEL={s/2}
#	{% endif %}

#[gcode_macro M900.2]
#gcode:
#	{% if params.K is defined %}
#		{% set K = params.K|float %}
#		SET_PRESSURE_ADVANCE ADVANCE={K}
#	{% endif %}
[gcode_macro NOTIFY]
gcode:
  {% if 'MSG' in params %}
    RESPOND TYPE=command MSG="action:notification {params.MSG}"
  {% endif %}

[gcode_macro RUN_ABL]
gcode:
    M190 S60
    G28
    M104 S0        #switch off heater as it was switched on after homing
    BED_MESH_CALIBRATE
    SAVE_CONFIG
    M140 S0
    M104 S0

[gcode_macro START_PRINT]
gcode:
    #BED_TEMP={material_bed_temperature_layer_0}
  {% set BED_TEMP = params.BED_TEMP|default(0)|float %}
    #EXTRUDER_TEMP={material_print_temperature_layer_0}
    #HOTEND_TEMP={material_print_temperature_layer_0}
  {% set HOTEND_TEMP = params.HOTEND_TEMP|default(0)|float %}
    #{% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    #{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    {% set toolTemp = params.HOTEND_TEMP|int %}
    {% set bedTemp = params.BED_TEMP|int %}
    M140 S{bedTemp}                    # set Bed temp to target
    M104 S150                            # hotend temperature for homing
    M82                                 #absolute extrusion mode

    #SET_GCODE_VARIABLE MACRO=<macro_name> VARIABLE=<name> VALUE=<value>
    M220 S100                             #Reset Feedrate
    M221 S100                             #Reset Flowrate

    {% if printer.homed_axes != 'XYZ' %}
        {% if bedTemp >= 50 %}
            TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=50    # wait for bed to be over 50
        {% endif %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM=140
        M104 S0                            # extruder heater off
        G28                                # home all axes
    {% endif %}
    G90                                    # absolute positioning

    M104 S{toolTemp -70}                     #{ params.hotend_temp - 70 }
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp - 10}

    # Set temperature and move to edge of bed to avoid drooping onto it
    G0 Z20
    G0 X0 Y0
    M104 S{toolTemp}                        # wait for Hotend Temp
    TEMPERATURE_WAIT SENSOR=extruder MINIMUM={toolTemp - 1}

    # And we can now draw our purge line
	#SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=1000 ACCEL_TO_DECEL=500 SQUARE_CORNER_VELOCITY=5
    SET_VELOCITY_LIMIT VELOCITY=100 ACCEL=1200 ACCEL_TO_DECEL=600 SQUARE_CORNER_VELOCITY=5
    #M201 X500.00 Y500.00 Z100.00 E5000.00 ;Setup machine max acceleration
  #M203 X500.00 Y500.00 Z10.00 E50.00 ;Setup machine max feedrate
  #M204 P500.00 R1000.00 T500.00 ;Setup Print/Retract/Travel acceleration
  #M205 X8.00 Y8.00 Z0.40 E5.00 ;Setup Jerk
  #M220 S100 ;Reset Feedrate
  #M221 S100 ;Reset Flowrate
  #G28 ;Home
  #G29 ;Auto bed Level
  G92 E0                                 #Reset Extruder
    G1 Z2.0 F3000                             #Move Z Axis up
    G1 X0 Y20 Z0.28                        #Move to start position
    G1 X0 Y200.0 Z0.28 E15                   #Draw the first line
    G1 X0 Y200.0 Z0.28                         #Move to side a little
    G1 X0.5 Y20 Z0.28 E30                     #Draw the second line
    G92 E0                                 #Reset Extruder
    G1 Z2.0 F3000                             #Move Z Axis up
    #SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=5000 ACCEL_TO_DECEL=2500 SQUARE_CORNER_VELOCITY=75    #speedBenchy settings

#[gcode_macro START_PRINT-2]
## put the following in the Cura start code and remove everything else:
## start_print HOTEND_TEMP={material_print_temperature_layer_0} BED_TEMP={material_bed_temperature_layer_0}
#gcode:
#	{% set toolTemp = params.HOTEND_TEMP|int %}
#	{% set bedTemp = params.BED_TEMP|int %}
#	SET_GCODE_OFFSET Z=0
#	{% if toolTemp >= 221 %}
#		SET_GCODE_OFFSET Z=0.03
#	{% endif %}
#	SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedTemp}
#	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
#	M82 								# absolute extrusion mode
#	M220 S100 							# Reset Feedrate
#	M221 S100 							# Reset Flowrate
#	SET_VELOCITY_LIMIT VELOCITY=200 ACCEL=1000 ACCEL_TO_DECEL=500 SQUARE_CORNER_VELOCITY=5
#
#	#home all axis and leave printhead in center of the bed for quick Z homing once the bed is 15 degrees below its target
#	G28
#	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=150
#	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp -15}	# wait for bed to be over 50
#	TEMPERATURE_WAIT SENSOR=extruder MINIMUM=140
#	SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
#	G28	Z							# home all axes
#	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={toolTemp -70}
#
#	#move to the side, wait untill the bed is within 10 deg from target heat the hotend
#	G90
#	G0 Z20
#	G0 X0 Y0
#	TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={bedTemp - 10}
#	SET_HEATER_TEMPERATURE HEATER=extruder TARGET={toolTemp}
#	TEMPERATURE_WAIT SENSOR=extruder MINIMUM={toolTemp - 1}	#start printing 1 deg before reaching setpoint
#
#	# And we can now draw our purge line
#	G92 E0 								#Reset Extruder
#	G1 Z2.0 F3000 						#Move Z Axis up
#	G1 X0 Y20 Z0.28						#Move to start position
#	G1 X0 Y200.0 Z0.28 E15   			#Draw the first line
#	G1 X0 Y200.0 Z0.28 					#Move to side a little
#	G1 X0.5 Y20 Z0.28 E30 				#Draw the second line
#	G92 E0 								#Reset Extruder
#	G1 Z2.0 F3000 						#Move Z Axis up

[gcode_macro END_PRINT]
gcode:
  M106 S255 ;full fan
  G91 #Relative positioning
  #G1 E-0.5 F2700 #Retract a bit
  #G1 E-0.5 Z0.2 F2400 #Retract and raise Z
  G1 E-2 F2700 #Retract a bit
  G1 E-2 Z0.2 F2400 #Retract and raise Z
  G1 X5 Y5 F3000 #Wipe out
  #G1 X5 Y5 F5000 #Wipe out
  G1 Z10 #Raise Z more
  G90 #Absolute positioning
  #G1 X0 Y{machine_depth} ;Present print
  #G1 X0 Y225 #Present print
  #G1 X0 Y250 #Present print with enclosure
  G1 X0 Y300 #Present print
  TURN_OFF_HEATERS
  G91 ;Relative positioning
  G4 S30
  G1 E-0.5 F2700 ; retract a bit more after cooling for 30 seconds about 20 degrees
  G4 S30
  G1 E-0.5 F2700 ; retract a bit more after cooling for 30 seconds about 20 degrees
  G90 ;Absolute positioning
  M82 ;absolute extrusion mode
  TEMPERATURE_WAIT SENSOR=heater_bed MAXIMUM=50
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=50
  M106 S0 #Turn-off fan
  M104 S0 #Turn-off hotend
  M140 S0 #Turn-off bed
  M84 X Y E #Disable all steppers but Z

#[gcode_macro CANCEL_PRINT]
#description: Cancel the actual running print
#rename_existing: CANCEL_PRINT_BASE
#gcode:
#    TURN_OFF_HEATERS
#    CANCEL_PRINT_BASE

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
variable_park: True
gcode:
## Move head and retract only if not already in the pause state and park set to true
  {% if printer.pause_resume.is_paused|lower == 'false' and park|lower == 'true'%}
    _TOOLHEAD_PARK_PAUSE_CANCEL
  {% endif %}
  TURN_OFF_HEATERS
  #M106 S0
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z4.5 F300
    G90
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}
    G28 X Y
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
    G1 Y{y_park} F2000
    M84
  CANCEL_PRINT_BASE

#[gcode_macro CANCEL_PRINT-2]
#description: Cancel the actual running print
#rename_existing: CANCEL_PRINT_BASE
#gcode:
#  TURN_OFF_HEATERS
#  CANCEL_PRINT_BASE

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  #_TOOLHEAD_PARK_PAUSE_CANCEL
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  #x##### read extrude from  _TOOLHEAD_PARK_PAUSE_CANCEL  macro #####x#
  ##### read E from pause macro #####
  #{% set extrude = printer['gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL'].extrude %}
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    #M83
	G91
	#G1 E{extrude} F2100
    G1 E{E} F2100
	#{% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro PAUSE_PARK]
gcode:
  {% set default_x = printer.toolhead.axis_minimum.x + 20 %}
  {% set default_y = printer.toolhead.axis_minimum.y + 20 %}

  {% if 'save_variables' in printer %}
    {% set svv = printer.save_variables.variables %}
    {% if 'park_x' in svv %}
      {% set default_x = svv.park_x %}
    {% endif %}
    {% if 'park_y' in svv %}
      {% set default_y = svv.park_y %}
    {% endif %}
  {% endif %}

  {% set x = params.X|default(default_x)|float %}
  {% set y = params.Y|default(default_y)|float %}
  {% set z = params.Z|default(20)|float %}
  {% set r = params.R|default(3)|float %}

  {% if printer.pause_resume.is_paused %}
    {action_respond_info("Already paused")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    PAUSE
    {% if r > 0.0 %}
      RETRACT D={r}
    {% endif %}
    G27 X{x} Y{y} Z{z}
  {% endif %}

[gcode_macro POST_END]
gcode:
  CLEAR_PAUSE
  {% if 't5uid1' in printer %}
    DGUS_PRINT_END
  {% endif %}
  M220 S100
  M221 S100
  M900 K0
  {% if printer.extruder.temperature >= 170 %}
    M83
    G91
    G1 E-2 F2400
    G1 E-2 Z5 F2400
  {% endif %}
  M82
  G90
  G27
  M104 S0
  M140 S0
  M106 S0
  M84 X Y E
  SAVE_IF_SET

[gcode_macro POWEROFF]
gcode:
  RESPOND TYPE=command MSG=action:poweroff

# [gcode_macro POWER_OFF_PRINTER]
# gcode:
# 	{action_call_remote_method("set_device_power", device="printer", state="off")}

[gcode_macro PRE_START]
gcode:
  {% set wz = params.WZ|default(0.25)|float %}
  {% set wn = params.WN|default(0.4)|float %}
  CLEAR_PAUSE
  M106 S0
  M220 S100
  M221 S100
  M900 K0
  {% if 't5uid1' in printer %}
    DGUS_PRINT_START
  {% endif %}
  G28
  WIPE_LINE Z={wz} N={wn}

[gcode_macro RETRACT]
gcode:
  {% set f = params.F|default(600)|float %}

  {% if 'D' in params %}
    {% if printer.idle_timeout.state == "Printing" and not printer.pause_resume.is_paused %}
      {action_respond_info("This command cannot be used while printing")}
    {% elif printer.extruder.temperature < 170 %}
      {action_respond_info("Extruder temperature too low")}
    {% else %}
      SAVE_GCODE_STATE NAME=RETRACT_state
      M83
      G1 E-{params.D} F{f}
      RESTORE_GCODE_STATE NAME=RETRACT_state MOVE=0
    {% endif %}
  {% endif %}

[gcode_macro SAVE_AT_END]
variable_save: 0
gcode:
  SET_GCODE_VARIABLE MACRO=SAVE_AT_END VARIABLE=save VALUE=1

[gcode_macro SAVE_IF_SET]
gcode:
  {% if printer["gcode_macro SAVE_AT_END"].save == 1 %}
    SAVE_CONFIG
  {% endif %}

[gcode_macro WIPE_LINE]
gcode:
  {% set z = params.Z|default(0.25)|float %}
  {% set n = params.N|default(0.4)|float %}

  {% if printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% elif printer.extruder.temperature < 170 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=WIPE_LINE_state
    M82
    G90
    G92 E0
    G1 X10 Y20 Z5 F3000
    G1 Z{z} F3000
    G1 X10 Y150 F1500 E10.83
    G1 X{ n + 10.0 } F5000
    G1 Y22 F1500 E21.5
    G1 Y20 F5000
    RESTORE_GCODE_STATE NAME=WIPE_LINE_state MOVE=0
  {% endif %}

[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
description: Helper: park toolhead used in PAUSE and CANCEL_PRINT
variable_extrude: 1.0
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  {% set z_park_delta = 2.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - z_park_delta) %}
    {% set z_safe = z_park_delta %}
  {% else %}
    {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    M83
    G1 E-{extrude} F2100
    {% if printer.gcode_move.absolute_extrude |lower == 'true' %} M82 {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G91
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
    {% if printer.gcode_move.absolute_coordinates|lower == 'false' %} G91 {% endif %}
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro _CLIENT_EXTRUDE]
description: Extrudes, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}
  {% set use_fw_retract = False if not macro_found
                     else False if client.use_fw_retract is not defined
                     else True  if client.use_fw_retract|lower == 'true' and printer.firmware_retraction is defined
                     else False %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.unretract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_unretract|default(35) %}

  {% set absolute_extrude = printer.gcode_move.absolute_extrude %}

  {% if printer.extruder.can_extrude %}
    {% if use_fw_retract %}
      {% if length < 0 %}
        G10
      {% else %}
        G11
      {% endif %}
    {% else %}
      M83
      G1 E{length} F{(speed|float|abs) * 60}
      {% if absolute_extrude %}
        M82
      {% endif %}
    {% endif %}
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}

[gcode_macro _CLIENT_RETRACT]
description: Retracts, if the extruder is hot enough
gcode:
  {% set macro_found = True if printer['gcode_macro _CLIENT_VARIABLE'] is defined else False %}
  {% set client = printer['gcode_macro _CLIENT_VARIABLE'] %}

  {% set length = (params.LENGTH|float) if params.LENGTH is defined
             else 1.0 if not macro_found
             else client.retract|default(1.0) %}

  {% set speed = params.SPEED if params.SPEED is defined
            else 35 if not macro_found
            else client.speed_retract|default(35) %}

  _CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}

[gcode_macro TIMELAPSE_TAKE_FRAME]
gcode:
	{action_call_remote_method("timelapse_newframe")}

[gcode_macro TIMELAPSE_RENDER]
gcode:
	{action_call_remote_method("timelapse_render")}

[gcode_macro LOAD_FILAMENT]
gcode:
	{% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 30.0 %}
		G0 Z30
    {% endif %}
    M83                            ; set extruder to relative
    G1 E45 F1000                  ; quickly load filament set for direct drive, for bowden set to E280
    G1 E30 F300                    ; slower extrusion for hotend path
    G1 E50 F150                    ; prime nozzle with filament
	#TURN_OFF_HEATERS
	G1 E-0.5 F500						; retract a bit
	#G1 E-1 F5						; retract a bit
    M82                            ; set extruder to absolute

[gcode_macro UNLOAD_FILAMENT]
gcode:
	{% set act_z = printer.toolhead.position.z|float %}
    {% if act_z < 30.0 %}
		G0 Z30
    {% endif %}
    M83                            ; set extruder to relative
    G1 E5 F300                    ; extrude a little to soften tip
    G1 E-100 F1000                 ; retract filament completely, set to E380 for Bowden
    M82                            ; set extruder to absolute

[gcode_macro Hotend_Cleaning]
gcode:
    M83                            ; set extruder to relative
    G1 E45 F1000                  ; quickly load filament set for direct drive, for bowden set to E280
    G1 E30 F300                    ; slower extrusion for hotend path
    G1 E50 F150                    ; prime nozzle with filament
    G1 E-100 F1000                 ; retract filament completely, set to E380 for Bowden
    M82                            ; set extruder to absolute

#[delayed_gcode macros_initialize]
#initial_duration: 0.0

## ------------------------- Filament Change --------------------------
## M600: Filament Change. This macro will pause the printer, move the
## tool to the change position, and retract the filament 50mm. Adjust
## the retraction settings for your own extruder. After filament has
## been changed, the print can be resumed from its previous position
## with the "RESUME" gcode.
#
#[gcode_macro M600]
#gcode:
#    {% set X = 0 %}
#    {% set Y = 0 %}
#    {% set Z = 20 %}
#    {% set RetractionAmnt = 500 %}
#    SAVE_GCODE_STATE NAME=M600_state
#    PAUSE
#    G91
#    G1 E-.8 F2700
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F3000
#    G91
#    G1 E-{RetractionAmnt} F1000
#    RESTORE_GCODE_STATE NAME=M600_state
## --------------------------------------------------------------------

#########################################
########## ADAPTIVE BED MESH ############
#########################################
# Written by Frix_x#0161 #
# @version: 3.0

# CHANGELOG:
#   v3.0: - added the use of [exclude_object] tags to extract the first layer bounding box (many thanks to Kyleisah for the excellent idea and inspiration)
#           the macro is still fully compatible with the old way using the SIZE parameter: it will use it if specified, or else
#           fallback to the [exclude_object] method and if both are not available, it will do a full and normal bed mesh as usual.
#         - also added a FORCE_MESH parameter to mesh even for very small parts
#         - removed the RRI that was always added put in the BED_MESH_CALIBRATE call. Now it's added only when there is one defined in the [bed_mesh] section
#   v2.3: moved the install notes into a proper markdown file in: doc > features > adaptive_bed_mesh.md
#   v2.2: removed the requirement to set mesh_pps in the [bed_mesh] section. It's now again optional as it should be
#   v2.1: fix for the nominal mesh (when no SIZE parameter is used or SIZE=0_0_0_0)
#   v2.0: split in multple macros to be able to use the center point in the z calibration bed probing position before doing the mesh
#   v1.1: fix for a bug when parsing string when using uppercase letters in the [bed_mesh] section
#   v1.0: first adaptive bed mesh macro

# -------------------------------------------------------------------------------------------------------------------------
# If you want to use it into your own config, please install it as a standalone macro as described in the
# installation section of this file: doc > features > adaptive_bed_mesh.md
# -------------------------------------------------------------------------------------------------------------------------

### What is it ? ###
# The adaptive bed mesh is simple: it's a normal bed mesh, but only "where" and "when" it's necessary.
# Sometime I print small parts, sometime I print full plates and I like to get a precise bed_mesh (like 9x9 or more). However, it take a
# lot of time and it's useless to probe all the plate for only a 5cm² part. So this is where the adaptive bed mesh is helping:
# 1. It get the corners coordinates of the fisrt layer surface either from the slicer or the [exclude_object] tags
# 2. It compute a new set of points to probe on this new zone to get at least the same precision as your standard bed mesh. For example, if
#    a normal bed mesh is set to 9x9 for 300mm², it will then compute 3x3 for a 100mm² surface. Also if for whatever reason your parts are in
#    the corner of the build plate (like for a damaged PEI in the center), it will follow them to probe this exact area.
# 3. As the probed points computed are odd, it will also compute the new relative reference index point in the center of the zone and save
#    the coordinates of this point to use them somwhere else (like the probed point of the auto z calibration plugin for example).
# 4. To go further, it will not do any bed_mesh if there is less than 3x3 points to probe (very small part alone) and choose/change the
#    algorithm (bicubic/lagrange) depending of the size and shape of the mesh computed (like 3x3 vs 3x9)

# Feel free to ping me on Discord (Frix_x#0161) if you need help or have any comments to improve it :)


# ===========================================================================================================
# DO NOT MODIFY THOSE VARIABLES (they are used internaly by the adaptive bed mesh macro)
[gcode_macro _ADAPTIVE_MESH_VARIABLES]
variable_ready: False
variable_do_mesh: False
variable_do_nominal: False
variable_mesh_min: 0,0
variable_mesh_max: 0,0
variable_mesh_center: 0,0
variable_probe_count: 0,0
variable_rri: 0
variable_algo: "bicubic"
gcode:


[gcode_macro COMPUTE_MESH_PARAMETERS]
description: Compute the mesh parameters and store them for later use
gcode:
    # 1 ----- GET ORIGINAL BEDMESH PARAMS FROM CONFIG ----------------------
    {% set xMinConf, yMinConf = printer["configfile"].config["bed_mesh"]["mesh_min"].split(',')|map('trim')|map('int') %}
    {% set xMaxConf, yMaxConf = printer["configfile"].config["bed_mesh"]["mesh_max"].split(',')|map('trim')|map('int') %}
    {% set xProbeCntConf, yProbeCntConf = printer["configfile"].config["bed_mesh"]["probe_count"].split(',')|map('trim')|map('int') %}
    {% set algo = printer["configfile"].config["bed_mesh"]["algorithm"]|lower %}
    {% set xMeshPPS, yMeshPPS = (printer["configfile"].config["bed_mesh"]["mesh_pps"]|default('2,2')).split(',')|map('trim')|map('int') %}

    {% set margin = params.MARGIN|default(5)|int %} # additional margin to mesh around the first layer
    {% set force_mesh = params.FORCE_MESH|default(False) %} # force the mesh even if it's a small part (ie. computed less than 3x3)


    # 2 ----- GET FIRST LAYER COORDINATES and SIZE -------------------------------------
    # If the SIZE parameter is defined and not a dummy placeholder, we use it to do the adaptive bed mesh logic
    {% if params.SIZE is defined and params.SIZE != "0_0_0_0" %}
        RESPOND MSG="Got a SIZE parameter for the adaptive bed mesh"
        {% set xMinSpec, yMinSpec, xMaxSpec, yMaxSpec = params.SIZE.split('_')|map('trim')|map('int') %}
    
    {% elif printer.exclude_object.objects %}
        # Else if SIZE is not defined, we fallback to use the [exclude_object] tags
        # This method is derived from Kyleisah KAMP repository: https://github.com/kyleisah/Klipper-Adaptive-Meshing-Purging)
        RESPOND MSG="No SIZE parameter, using the [exclude_object] tags for the adaptive bed mesh"
        {% set eo_points = printer.exclude_object.objects|map(attribute='polygon')|sum(start=[]) %}
        {% set xMinSpec = eo_points|map(attribute=0)|min %}
        {% set yMinSpec = eo_points|map(attribute=1)|min %}
        {% set xMaxSpec = eo_points|map(attribute=0)|max %}
        {% set yMaxSpec = eo_points|map(attribute=1)|max %}
    
    {% else %}
        # Else if no SIZE parameter and no [exclude_object] tags, then we want to do a nominal bed mesh
        # so nothing to do here...
        RESPOND MSG="No info about the first layer coordinates, doing a nominal bed mesh instead of adaptive"
    {% endif %}


    # If the first layer size was correctly retrieved, we can do the adaptive bed mesh logic, else we
    # fallback to the original and nominal BED_MESH_CALIBRATE function (full bed probing)
    {% if xMinSpec and yMinSpec and xMaxSpec and yMaxSpec %}

        # 3 ----- APPLY MARGINS ----------------------------------------------
        # We use min/max function as we want it to be constrained by the original
        # bedmesh size. This will avoid going outside the machine limits
        {% set xMin = [xMinConf, (xMinSpec - margin)]|max %}
        {% set xMax = [xMaxConf, (xMaxSpec + margin)]|min %}
        {% set yMin = [yMinConf, (yMinSpec - margin)]|max %}
        {% set yMax = [yMaxConf, (yMaxSpec + margin)]|min %}

        # 4 ----- COMPUTE A NEW PROBE COUNT ----------------------------------
        # The goal is to have at least the same precision as from the config. So we compute an equivalent number
        # of probe points on each X/Y dimensions (distance between two points should be the same as in the config)
        {% set xProbeCnt = ((xMax - xMin) * xProbeCntConf / (xMaxConf - xMinConf))|round(0, 'ceil')|int %}
        {% set yProbeCnt = ((yMax - yMin) * yProbeCntConf / (yMaxConf - yMinConf))|round(0, 'ceil')|int %}

        # Then, three possibilities :
        # a) Both dimensions have less than 3 probe points : the bed_mesh is not needed as it's a small print (if not forced).
        # b) If one of the dimension is less than 3 and the other is greater. The print looks to be elongated and
        #    need the adaptive bed_mesh : we add probing points to the small direction to reach 3 and be able to do it.
        # c) If both direction are greater than 3, we need the adaptive bed_mesh and it's ok.
        # At the end we control (according to Klipper bed_mesh method: "_verify_algorithm") that the computed probe_count is
        # valid according to the choosen algorithm or change it if needed.
        {% if xProbeCnt < 3 and yProbeCnt < 3 %}
            {% if force_mesh %}
                RESPOND MSG="Bed mesh forced (small part detected): meshing 3x3..."
                {% set xProbeCnt = 3 %}
                {% set yProbeCnt = 3 %}
                {% set rRefIndex = 4 %}
                {% set algo = "lagrange" %}
                {% set xCenter = xMin + ((xMax - xMin) / 2) %}
                {% set yCenter = yMin + ((yMax - yMin) / 2) %}
                {% set mesh_min = "%d,%d"|format(xMin, yMin) %}
                {% set mesh_max = "%d,%d"|format(xMax, yMax) %}
                {% set probe_count = "%d,%d"|format(xProbeCnt, yProbeCnt) %}
                {% set mesh_center = "%d,%d"|format(xCenter, yCenter) %}
                RESPOND MSG="Computed mesh parameters: MESH_MIN={mesh_min} MESH_MAX={mesh_max} MESH_CENTER={mesh_center} PROBE_COUNT={probe_count} RELATIVE_REFERENCE_INDEX={rRefIndex} ALGORITHM={algo}"
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_mesh VALUE={True}
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_nominal VALUE={False}
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_min VALUE='"{mesh_min}"'
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_max VALUE='"{mesh_max}"'
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"{mesh_center}"'
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=probe_count VALUE='"{probe_count}"'
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=rri VALUE={rRefIndex}
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=algo VALUE='"{algo}"'
            {% else %}
                RESPOND MSG="Computed mesh parameters: none, bed mesh not needed for very small parts"
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_mesh VALUE={False}
                {% set xCenter = xMin + ((xMax - xMin) / 2) %}
                {% set yCenter = yMin + ((yMax - yMin) / 2) %}
                {% set mesh_center = "%d,%d"|format(xCenter, yCenter) %} # we still compute the mesh center for those using klipper_z_calibration
                SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"{mesh_center}"'
            {% endif %}
        {% else %}
            {% set xProbeCnt = [3, xProbeCnt]|max %}
            {% set yProbeCnt = [3, yProbeCnt]|max %}

            # We verify that the number of probe points on each axis is odd or add one to it
            # This is very important to have a relative_reference_index point at the center of the mesh !
            {% if xProbeCnt % 2 == 0 %}
                {% set xProbeCnt = xProbeCnt + 1 %}
            {% endif %}
            {% if yProbeCnt % 2 == 0 %}
                {% set yProbeCnt = yProbeCnt + 1 %}
            {% endif %}

            # Check of the probe points and interpolation algorithms according to Klipper code
            {% if xMeshPPS != 0 or yMeshPPS != 0 %}
                {% set probeCntMin = [xProbeCnt, yProbeCnt]|min %}
                {% set probeCntMax = [xProbeCnt, yProbeCnt]|max %}
                {% if algo == "lagrange" and probeCntMax > 6 %}
                    # Lagrange interpolation tends to oscillate when using more than 6 samples: swith to bicubic
                    {% set algo = "bicubic" %}
                {% endif %}
                {% if algo == "bicubic" and probeCntMin < 4 %}
                    {% if probeCntMax > 6 %}
                        # Impossible case: need to add probe point on the small axis to be >= 4 (we want 5 to keep it odd)
                        {% if xProbeCnt > yProbeCnt %}
                            {% set yProbeCnt = 5 %}
                        {% else %}
                            {% set xProbeCnt = 5 %}
                        {% endif %}
                    {% else %}
                        # In this case bicubic is not adapted (less than 4 points): switch to lagrange
                        {% set algo = "lagrange" %}
                    {% endif %}
                {% endif %}
            {% endif %}

            # 5 ----- COMPUTE THE RELATIVE_REFERENCE_INDEX POINT --------------------
            {% set rRefIndex = (((xProbeCnt * yProbeCnt) - 1) / 2)|int %}
            {% set xCenter = xMin + ((xMax - xMin) / 2) %}
            {% set yCenter = yMin + ((yMax - yMin) / 2) %}

            # 6 ----- FORMAT THE PARAMETERS AND SAVE THEM ---------------------------
            {% set mesh_min = "%d,%d"|format(xMin, yMin) %}
            {% set mesh_max = "%d,%d"|format(xMax, yMax) %}
            {% set probe_count = "%d,%d"|format(xProbeCnt, yProbeCnt) %}
            {% set mesh_center = "%d,%d"|format(xCenter, yCenter) %}
            RESPOND MSG="Computed mesh parameters: MESH_MIN={mesh_min} MESH_MAX={mesh_max} MESH_CENTER={mesh_center} PROBE_COUNT={probe_count} RELATIVE_REFERENCE_INDEX={rRefIndex} ALGORITHM={algo}"
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_mesh VALUE={True}
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_nominal VALUE={False}
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_min VALUE='"{mesh_min}"'
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_max VALUE='"{mesh_max}"'
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"{mesh_center}"'
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=probe_count VALUE='"{probe_count}"'
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=rri VALUE={rRefIndex}
            SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=algo VALUE='"{algo}"'
        {% endif %}
    {% else %}
        SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_mesh VALUE={True}
        SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=do_nominal VALUE={True}

        {% set xCenter = xMinConf + ((xMaxConf - xMinConf) / 2) %}
        {% set yCenter = yMinConf + ((yMaxConf - yMinConf) / 2) %}
        {% set mesh_center = "%d,%d"|format(xCenter, yCenter) %} # we still compute the mesh center for those using klipper_z_calibration
        SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=mesh_center VALUE='"{mesh_center}"'
    {% endif %}

    # Finaly save in the variables that we already computed the values
    SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=ready VALUE={True}


[gcode_macro ADAPTIVE_BED_MESH]
description: Perform a bed mesh, but only where and when it's needed
gcode:
    {% set ready = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].ready %}

    {% if not 'xyz' in printer.toolhead.homed_axes %}
        { action_raise_error("Must Home printer first!") }
    {% endif %}

    # If the parameters where computed, we can do the mesh by calling the _DO_ADAPTIVE_MESH
    {% if ready %}
        _DO_ADAPTIVE_MESH

    # If the parameters where not computed prior to the ADAPTIVE_BED_MESH call, we call the COMPUTE_MESH_PARAMETERS
    # macro first and then call the _DO_ADAPTIVE_MESH macro after it
    {% else %}
        RESPOND MSG="Adaptive bed mesh: parameters not already computed, automatically calling the COMPUTE_MESH_PARAMETERS macro prior to the mesh"
        COMPUTE_MESH_PARAMETERS {rawparams}
        M400 # mandatory to flush the gcode buffer and be sure to use the last computed parameters
        _DO_ADAPTIVE_MESH
    {% endif %}


[gcode_macro _DO_ADAPTIVE_MESH]
gcode:
    # 1 ----- POPULATE BEDMESH PARAMS FROM SAVED VARIABLES ----------------------
    {% set do_mesh = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].do_mesh %}
    {% set do_nominal = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].do_nominal %}
    {% set mesh_min = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_min %}
    {% set mesh_max = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].mesh_max %}
    {% set probe_count = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].probe_count %}
    {% set rRefIndex = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].rri %}
    {% set algo = printer["gcode_macro _ADAPTIVE_MESH_VARIABLES"].algo %}

    # 2 --------- ADAPTIVE_BED_MESH LOGIC --------------------------------------

    # If it's necessary to do a mesh
    {% if do_mesh %}
        # If it's a standard bed_mesh to be done
        {% if do_nominal %}
            RESPOND MSG="Adaptive bed mesh: nominal bed mesh"
            BED_MESH_CALIBRATE
        {% else %}
            {% if printer["configfile"].config["bed_mesh"]["relative_reference_index"] is defined %}
                RESPOND MSG="Adaptive bed mesh: MESH_MIN={mesh_min} MESH_MAX={mesh_max} PROBE_COUNT={probe_count} RELATIVE_REFERENCE_INDEX={rRefIndex} ALGORITHM={algo}"
                BED_MESH_CALIBRATE MESH_MIN={mesh_min} MESH_MAX={mesh_max} PROBE_COUNT={probe_count} RELATIVE_REFERENCE_INDEX={rRefIndex} ALGORITHM={algo}
            {% else %}
                RESPOND MSG="Adaptive bed mesh: MESH_MIN={mesh_min} MESH_MAX={mesh_max} PROBE_COUNT={probe_count} ALGORITHM={algo}"
                BED_MESH_CALIBRATE MESH_MIN={mesh_min} MESH_MAX={mesh_max} PROBE_COUNT={probe_count} ALGORITHM={algo}
            {% endif %}
        {% endif %}
    {% else %}
        RESPOND MSG="Adaptive bed mesh: no mesh to be done"
    {% endif %}

    # Set back the 'ready' parameter to false
    SET_GCODE_VARIABLE MACRO=_ADAPTIVE_MESH_VARIABLES VARIABLE=ready VALUE={False}

## Client klipper macro definitions
##
## Copyright (C) 2022 Alex Zellner <alexander.zellner@googlemail.com>
##
## This file may be distributed under the terms of the GNU GPLv3 license
##
## !!! This file is read-only. Maybe the used editor indicates that. !!!
##
## Customization:
##   1) copy the gcode_macro _CLIENT_VARIABLE (see below) to your printer.cfg
##   2) remove the comment mark (#) from all lines
##   3) change any value in there to your needs
##
## Use the PAUSE macro direct in your M600:
##  e.g. with a different park position front left and a minimal height of 50 
##    [gcode_macro M600]
##    description: Filament change
##    gcode: PAUSE X=10 Y=10 Z_MIN=50
##  Z_MIN will park the toolhead at a minimum of 50 mm above to bed to make it easier for you to swap filament.
##
## Client variable macro for your printer.cfg
#[gcode_macro _CLIENT_VARIABLE]
#variable_use_custom_pos   : False ; use custom park coordinates for x,y [True/False]
#variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
#variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
#variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
#variable_retract          : 1.0   ; the value to retract while PAUSE
#variable_cancel_retract   : 5.0   ; the value to retract while CANCEL_PRINT
#variable_speed_retract    : 35.0  ; retract speed in mm/s
#variable_unretract        : 1.0   ; the value to unretract while RESUME
#variable_speed_unretract  : 35.0  ; unretract speed in mm/s
#variable_speed_hop        : 15.0  ; z move speed in mm/s
#variable_speed_move       : 100.0 ; move speed in mm/s
#variable_park_at_cancel   : False ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
#variable_park_at_cancel_x : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
#variable_park_at_cancel_y : None  ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
## !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
#variable_use_fw_retract  : False ; use fw_retraction instead of the manual version [True/False]
#gcode:
